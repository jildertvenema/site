{"version":3,"sources":["nested-files.js","inputs.js","App.js","serviceWorker.js","index.js"],"names":["Item","styled","div","File","NestedEditableDemo","state","files","dir","setOutputMac","out","split","slice","filter","a","length","map","line","parms","key","modified","size","isFolder","includes","console","log","setState","getFiles","clientId","props","platform","socket","emit","command","handleCreateFolder","concat","handleCreateFiles","prefix","newFiles","file","newKey","substring","name","Moment","uniqueNewFiles","newFile","exists","existingFile","push","handleRenameFolder","oldKey","substr","replace","handleRenameFile","handleDeleteFolder","folderKey","handleDeleteFile","fileKey","navigateBack","newDir","navigateForward","folder","downloadFromServer","fileName","output","download","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","this","className","onClick","React","Component","ButtonContainer","Dialog","useState","slaves","setSlaves","client","setClient","showTerminal","setShowTerminal","useEffect","on","removeListener","color","backgroundColor","barColor","fontWeight","fontSize","commandPassThrough","cmd","print","msg","find","x","computerName","actionHandlers","handleClose","toggleClose","theme","require","socketIOClient","Container","App","connected","setConnected","code","setCode","connect","master","localStorage","setItem","localCode","getItem","type","value","onChange","e","target","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e188ad3.chunk.js","sourcesContent":["import React from 'react'\nimport Moment from 'moment'\nimport styled from 'styled-components'\n\n\nconst Item = styled.div`\n  width: 33%;\n  float: left;\n`\n\nconst File = styled.div`\n  width: 50vw;\n  height: 40px;\n  cursor: pointer;\n\n  &:hover {\n    background: lightgray;\n  }\n`\n\nclass NestedEditableDemo extends React.Component {\n  state = {\n    files: [\n    ],\n    dir: './'\n  }\n  // state = {\n  //   files: [\n  //     {\n  //       key: 'photos/animals/cat in a hat.png',\n  //       modified: +Moment().subtract(1, 'hours'),\n  //       size: 1.5 * 1024 * 1024,\n  //     },\n  //     {\n  //       key: 'photos/animals/kitten_ball.png',\n  //       modified: +Moment().subtract(3, 'days'),\n  //       size: 545 * 1024,\n  //     },\n  //     {\n  //       key: 'photos/animals/elephants.png',\n  //       modified: +Moment().subtract(3, 'days'),\n  //       size: 52 * 1024,\n  //     },\n  //     {\n  //       key: 'photos/funny fall.gif',\n  //       modified: +Moment().subtract(2, 'months'),\n  //       size: 13.2 * 1024 * 1024,\n  //     },\n  //     {\n  //       key: 'photos/holiday.jpg',\n  //       modified: +Moment().subtract(25, 'days'),\n  //       size: 85 * 1024,\n  //     },\n  //     {\n  //       key: 'documents/letter chunks.doc',\n  //       modified: +Moment().subtract(15, 'days'),\n  //       size: 480 * 1024,\n  //     },\n  //     {\n  //       key: 'documents/export.pdf',\n  //       modified: +Moment().subtract(15, 'days'),\n  //       size: 4.2 * 1024 * 1024,\n  //     },\n  //   ],\n  // }\n\n\n  setOutputMac = (out) => {\n    const files = out.split('\\n').slice(1).filter(a=>a.length > 7).map(line => {\n     const parms = line.split(' ').filter(a=>a)\n     return {\n       key: parms[8],\n       modified: parms[5] + ' ' + parms[6] + ' ' + parms[7],\n       size: ~~parms[4] * 1024,\n       isFolder: parms[0].includes('drw')\n     }\n    })\n\n    console.log(files)\n\n    this.setState({files})\n  }\n\n  getFiles = (dir) => {\n    const clientId = this.props.clientId \n    if (this.props.platform === 'darwin') {\n      this.props.socket.emit('commandSlave', { clientId, command: `cd ${dir || this.state.dir} && ls -a -l` }, this.setOutputMac)\n    } else if (this.props.platform === 'win32') {\n      console.log('IMPLEMENT WINDOWS')\n    }\n  }\n\n  componentDidMount() {\n    this.getFiles(this.state.dir)\n  }\n\n  handleCreateFolder = (key) => {\n    this.setState(state => {\n      state.files = state.files.concat([{\n        key: key,\n      }])\n      return state\n    })\n  }\n  handleCreateFiles = (files, prefix) => {\n    this.setState(state => {\n      const newFiles = files.map((file) => {\n        let newKey = prefix\n        if (prefix !== '' && prefix.substring(prefix.length - 1, prefix.length) !== '/') {\n          newKey += '/'\n        }\n        newKey += file.name\n        return {\n          key: newKey,\n          size: file.size,\n          modified: +Moment(),\n        }\n      })\n\n      const uniqueNewFiles = []\n      newFiles.map((newFile) => {\n        let exists = false\n        state.files.map((existingFile) => {\n          if (existingFile.key === newFile.key) {\n            exists = true\n          }\n        })\n        if (!exists) {\n          uniqueNewFiles.push(newFile)\n        }\n      })\n      state.files = state.files.concat(uniqueNewFiles)\n      return state\n    })\n  }\n  handleRenameFolder = (oldKey, newKey) => {\n    this.setState(state => {\n      const newFiles = []\n      state.files.map((file) => {\n        if (file.key.substr(0, oldKey.length) === oldKey) {\n          newFiles.push({\n            ...file,\n            key: file.key.replace(oldKey, newKey),\n            modified: +Moment(),\n          })\n        } else {\n          newFiles.push(file)\n        }\n      })\n      state.files = newFiles\n      return state\n    })\n  }\n  handleRenameFile = (oldKey, newKey) => {\n    this.setState(state => {\n      const newFiles = []\n      state.files.map((file) => {\n        if (file.key === oldKey) {\n          newFiles.push({\n            ...file,\n            key: newKey,\n            modified: +Moment(),\n          })\n        } else {\n          newFiles.push(file)\n        }\n      })\n      state.files = newFiles\n      return state\n    })\n  }\n  handleDeleteFolder = (folderKey) => {\n    this.setState(state => {\n      const newFiles = []\n      state.files.map((file) => {\n        if (file.key.substr(0, folderKey.length) !== folderKey) {\n          newFiles.push(file)\n        }\n      })\n      state.files = newFiles\n      return state\n    })\n  }\n  handleDeleteFile = (fileKey) => {\n    this.setState(state => {\n      const newFiles = []\n      state.files.map((file) => {\n        if (file.key !== fileKey) {\n          newFiles.push(file)\n        }\n      })\n      state.files = newFiles\n      return state\n    })\n  }\n\n  navigateBack = () => {\n    const newDir = this.state.dir + '../'\n    this.setState({\n      dir: newDir\n    })\n    this.getFiles(newDir)\n  }\n\n  navigateForward = (folder) => {\n    const newDir = this.state.dir + folder + '/'\n    this.setState({\n      dir: newDir\n    })\n    this.getFiles(newDir)\n  }\n\n  downloadFromServer = (fileName) => {\n    const clientId = this.props.clientId \n    this.props.socket.emit('commandSlave', { clientId, command: `cat ${this.state.dir}${fileName}` }, (output) => this.download(fileName, output))\n  }\n\n  download = (filename, text) => {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n  \n    element.style.display = 'none';\n    document.body.appendChild(element);\n  \n    element.click();\n  \n    document.body.removeChild(element);\n  }\n\n  render() {\n    return (\n    <>\n      <button className='mb-4' onClick={this.navigateBack}>Folder back</button>\n      <div>\n        {this.state.files && this.state.files.map(({ key, modified, size, isFolder }) => \n          <div>\n            <File key={key} onClick={() => isFolder ? this.navigateForward(key) : this.downloadFromServer(key)}>\n              <Item>{key}</Item>\n              <Item>{modified}</Item>\n              <Item>{size}</Item>\n            </File>\n          </div>\n        )}\n      </div>\n    </>\n    )\n  }\n}\n\n\nexport default NestedEditableDemo\n \n","import React, { useEffect, useState, useRef } from 'react';\nimport { Button, FormInput } from \"shards-react\";\nimport styled from 'styled-components'\nimport Terminal from 'terminal-in-react';\nimport FileBrowser from './nested-files'\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 16px;\n`\n\nconst Dialog = styled.div`\n  position: fixed;\n  top: 5vh;\n  bottom: 5vh;\n  left: 5vw;\n  right: 5vw;\n`\n\nexport default ({ socket }) => {\n\n  const [slaves, setSlaves] = useState(null)\n  const [client, setClient] = useState('')\n  const [showTerminal, setShowTerminal] = useState(false)\n\n\n  useEffect(() => {\n    socket.on('newSlaves', (slaves) => {\n      setSlaves(slaves)\n      console.log(slaves)\n    })\n    return () => socket.removeListener('newSlaves')\n  }, [])\n\n  useEffect(() => {\n    socket.emit('getSlaves', {}, (slaves) => {\n      setSlaves(slaves)\n      console.log(slaves)\n    })\n  }, [])\n\n  const sendCommand = (cmd, print) => {\n    const setOutput = output => {\n      print(output)\n    }\n    const command = cmd[0]\n    if (command) {\n      const clientId = client.clientId\n      socket.emit('commandSlave', { clientId, command }, setOutput)\n    }\n  }\n\n\n  // <FormInput placeholder=\"Custom command\" className=\"mb-2 mr-2\" innerRef={commandField} />\n\n  return <div>\n    {\n      showTerminal && <Dialog>\n        <Terminal\n          color='green'\n          backgroundColor='black'\n          barColor='black'\n          style={{ fontWeight: \"bold\", fontSize: \"1em\" }}\n          commandPassThrough={sendCommand}\n          msg={`Connected with ${slaves.find(x=> x.clientId === client.clientId).computerName}`}\n          actionHandlers={{\n            handleClose: (toggleClose) => {\n              setShowTerminal(false)\n            }\n          }}\n          />\n      </Dialog>\n    }\n      <ButtonContainer>\n      {\n        slaves && slaves.map((client) => <Button key={client.clientId} className='m-2' onClick={() => setClient(client)}>{client.computerName}</Button>)\n      }\n      </ButtonContainer>\n        {\n          client && <>\n            <p>{`Connected with ${slaves.find(x=> x.clientId === client.clientId).computerName}`}</p>\n            <ButtonContainer>\n              <Button theme=\"light\" onClick={() => setShowTerminal(true)}>Open terminal</Button>\n            </ButtonContainer>\n\n            <FileBrowser socket={socket} platform={client.platform} clientId={client.clientId} />\n          </>\n        }\n    </div>\n}","import React, { useState } from 'react';\nimport styled from 'styled-components'\nimport Inputs from './inputs'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\nconst socketIOClient = require('socket.io-client')\nconst apiUrl = 'https://cool-app1.herokuapp.com'\n// const apiUrl = 'localhost:8080'\nconst socket = socketIOClient(apiUrl)\n\nsocket.on('connect', function(){\n  console.log('connected with server')\n});\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 90vh;\n`\n\nfunction App() {\n  const [connected, setConnected] = useState(false)\n  const [code, setCode] = useState('')\n\n  const connect = (code) => {\n    console.log('connecting with server..')\n\n    socket.emit('join', {\n      master: true,\n      key: code\n    }, () => {\n      localStorage.setItem('app-code', code)\n      setConnected(true)\n    });\n  }\n\n\n  const localCode = localStorage.getItem('app-code')\n  if (localCode) {\n    connect(localCode)\n  }\n\n\n  return (\n    <Container>\n      {connected ? <Inputs socket={socket} /> : <div>\n        <p>Enter code..</p>\n        <input type=\"text\" value={code} onChange={(e) => setCode(e.target.value)} />\n        <button onClick={(e) => connect(code)}>\n          Join\n        </button>\n       </div>\n      }\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}